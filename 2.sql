drop table if exists appeal, comments;

create table appeal
(
	id int primary key generated by default as identity,
	number int,
	date_reliase date,
	status text
);

create table comments
(
	id int primary key generated by default as identity,
	appeal_id  int references appeal(id),
	text_comments text,
	date_public date
);

insert into appeal(number, date_reliase, status)
values (15, '2024-02-21', 'получен ответ'),
		(16, '2024-02-22', 'отправлено');
	
insert into comments(text_comments, date_public)
values ('мы обратим внимание на проблемы с сайтом', '2024-02-21'),
		('мы еще не прочитали ваше обращение', '2024-02-22');

select
	a.id,
	a.number,
	a.date_reliase,
	a.status,
	coalesce (json_agg(jsonb_build_object(
	'id', com.id, 'text_comments', com.text_comments, 'date_public', com.date_public))
	filter (where com.id is not null), '[]')
from appeal a
left join comments com
	on a.id = com.id
group by a.id;